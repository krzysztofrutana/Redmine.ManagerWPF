<UserControl x:Class="Redmine.ManagerWPF.Desktop.Views.UserControls.TimeIntervalList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Redmine.ManagerWPF.Desktop.Views.UserControls"
             xmlns:vm="clr-namespace:Redmine.ManagerWPF.Desktop.ViewModels"
             xmlns:conv="clr-namespace:Redmine.ManagerWPF.Desktop.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.DataContext>
        <vm:TimeIntervalsViewModel x:Name="ViewModel" />
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <conv:StringToVIsibilityConverter x:Key="StringToVIsibilityConverter" />
            <conv:DateTimeToVIsibilityConverter x:Key="DateTimeToVIsibilityConverter" />
            <conv:DateTimeToVIsibilityReverseConverter x:Key="DateTimeToVIsibilityReverseConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ListView
            Grid.Row="0"
            ItemsSource="{Binding TimeIntervalsForNode}"
            VirtualizingPanel.VirtualizationMode="Recycling">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Visibility="{Binding StartDate, Converter={StaticResource DateTimeToVIsibilityConverter}}"
                            Text="{Binding StartDate, Mode=OneTime}"/>
                        <Button
                            Grid.Column="0"
                            Visibility="{Binding StartDate, Converter={StaticResource DateTimeToVIsibilityReverseConverter}}"
                            Content="Start"
                            Command="{Binding Path=DataContext.StartTimeIntervalAsyncCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                            CommandParameter="{Binding}"/>
                        <TextBlock
                            Grid.Column="2"
                            Visibility="{Binding CountedTime, Converter={StaticResource StringToVIsibilityConverter}}"
                            Text="{Binding CountedTime, Mode=OneTime}"/>
                        <TextBlock
                            Grid.Column="2"
                            Visibility="{Binding EndDate, Converter={StaticResource DateTimeToVIsibilityConverter}}"
                            Text="{Binding StartDate, Mode=OneTime}"/>
                        <Button
                            Grid.Column="2"
                            Visibility="{Binding EndDate, Converter={StaticResource DateTimeToVIsibilityReverseConverter}}"
                            Content="Stop"
                            Command="{Binding Path=DataContext.EndTimeIntervalAsyncCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                            CommandParameter="{Binding}"/>
                        <Button Grid.Row="0" Grid.Column="3" Margin="0,0,10,0" HorizontalAlignment="Right" Command="{Binding Path=DataContext.RemoveTimeIntervalAsyncCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" CommandParameter="{Binding}" Content="Usuń"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Button Grid.Row="1" Margin="0,0,10,0" HorizontalAlignment="Right" Command="{Binding AddTimeIntervalAsyncCommand}" Content="Dodaj czas"/>
    </Grid>
</UserControl>
